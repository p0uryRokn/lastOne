name: Release
on:
  workflow_dispatch: {}

permissions:
  contents: read # for checkout

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"

      - name: Install dependencies
        run: npm clean-install

      - name: Verify the integrity of provenance attestations and registry signatures for installed dependencies
        run: npm audit signatures

      - name: Run Semantic Release
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release

      - name: Overwrite release with GitHub-generated notes
        if: ${{ always() && steps.semantic.outputs.new_release_published == 'true' }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: ${{ steps.semantic.outputs.new_release_git_tag }}
          PREV: ${{ steps.semantic.outputs.last_release_git_tag }}
        run: |
          set -e
          echo "Generating GitHub-native notes for $TAG"
          body="$(gh api repos/${GITHUB_REPOSITORY}/releases/generate-notes \
                    -f tag_name="$TAG" \
                    ${PREV:+-f previous_tag_name="$PREV"} \
                    -q .body)"
          gh release edit "$TAG" --notes "$body"

