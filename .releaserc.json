{
  "branches": ["main"],
  "plugins": [
    [
      "@semantic-release/commit-analyzer",
      {
        "preset": "conventionalcommits",
        "releaseRules": [
          { "breaking": true, "release": "major" },
          { "type": "feat", "release": "minor" },
          { "type": "fix", "release": "patch" },
          { "type": "chore", "release": "patch" },
          { "type": "test", "release": "patch" },
          { "type": "refactor", "release": "patch" },
          { "type": "docs", "release": "patch" },
          { "type": "style", "release": "patch" },
          { "type": "build", "release": "patch" },
          { "type": "ci", "release": "patch" }
        ],
        "parserOpts": {
          "noteKeywords": ["BREAKING CHANGE", "BREAKING CHANGES", "BREAKING"]
        }
      }
    ],
    [
      "@semantic-release/release-notes-generator",
      {
        "preset": "conventionalcommits",
        "presetConfig": {
          "types": [
            { "type": "feat", "section": "Features" },
            { "type": "fix", "section": "Bug Fixes" },
            { "type": "chore", "section": "Chores" },
            { "type": "test", "section": "Tests" },
            { "type": "docs", "section": "Documentation" },
            { "type": "refactor", "section": "Refactoring" },
            { "type": "style", "section": "Style" },
            { "type": "build", "section": "Build System" },
            { "type": "ci", "section": "Continuous Integration" }
          ]
        }
      }
    ],
    [
      "@semantic-release/github",
      {
        "draftRelease": true,
        "releaseBodyTemplate": "<%= nextRelease.notes %><%\\n  // Build unique contributor handles from this release's commits\\n  const seen = new Set();\\n  const isBot = (id) => /\\\\[bot\\\\]$/i.test(id||'') || /(^|-)bot($|-)$/i.test(id||'');\\n  const users = [];\\n  (commits || []).forEach(c => {\\n    const a = c.author || {};\\n    let login = (a.login || a.username || '').trim();\\n    // Fallback: extract from GitHub noreply email formats (12345+user@users.noreply.github.com or user@users.noreply.github.com)\\n    if (!login && a.email) {\\n      const m = String(a.email).toLowerCase().match(/^(?:\\\\d+\\+)?([a-z0-9-]+)@users\\\\.noreply\\\\.github\\\\.com$/);\\n      if (m) login = m[1];\\n    }\\n    if (!login || seen.has(login) || isBot(login)) return;\\n    seen.add(login);\\n    users.push(login);\\n  });\\n%><% if (users.length) { %>\\n\\n### Contributors\\n<p><% users.forEach(u => { %><a href=\\"https://github.com/<%= u %>\\"><img src=\\"https://github.com/<%= u %>.png?size=64\\" width=\\"48\\" height=\\"48\\" alt=\\"@<%= u %>\\" title=\\"@<%= u %>\\"></a> <% }) %></p>\\n\\nThanks to <% for (let i=0; i<users.length; i++) { %>@<%= users[i] %><% if (i < users.length - 1) { %>, <% } %><% } %>!\\n<% } %><% if (lastRelease && lastRelease.gitTag) { %>\\n\\n[Full Changelog](../../compare/<%= lastRelease.gitTag %>...<%= nextRelease.gitTag %>)\\n<% } %>"
      }
    ]
  ]
}
